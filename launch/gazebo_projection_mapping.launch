<?xml version="1.0" encoding="UTF-8"?>
<launch>
	<arg name="camera_initial_x" default="0" />
	<arg name="camera_initial_y" default="0" />
	<arg name="camera_initial_z" default="0" />
	<arg name="camera_initial_roll" default="0" />
	<arg name="camera_initial_pitch" default="0" />
	<arg name="camera_initial_yaw" default="0" />

	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find gazebo_projection_mapping)/worlds/lab_with_windows.world" />
		<arg name="paused" value="false" />
		<arg name="use_sim_time" value="false" />
		<arg name="gui" value="true" />
		<arg name="headless" value="true" />
		<arg name="debug" value="false" />
	</include>

	<param name="camera_projection_mapping_description" command="$(find xacro)/xacro.py '$(find gazebo_projection_mapping)/urdf/camera.urdf.xacro'" />

	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen" respawn="false"
		args="-urdf -model camera_projection_mapping -param camera_projection_mapping_description -x $(arg camera_initial_x) -y $(arg camera_initial_y) -z $(arg camera_initial_z) -R $(arg camera_initial_roll) -P $(arg camera_initial_pitch) -Y $(arg camera_initial_yaw)" />

	<node pkg="image_view" type="image_view" name="image_view">
		<param name="autosize" type="bool" value="false" />
		<remap from="image" to="virtual_camera/image_raw" />
	</node>

	<node pkg="gazebo_projection_mapping" type="gpm_tf_to_link_state_node" name="gpm_tf_to_link_state_node">
		<param name="tf_source_frame" type="str" value="projector_link" />
	</node>
</launch>